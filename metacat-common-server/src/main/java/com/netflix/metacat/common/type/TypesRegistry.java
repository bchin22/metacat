/*
 * Copyright 2016 Netflix, Inc.
 *    Licensed under the Apache License, Version 2.0 (the "License");
 *    you may not use this file except in compliance with the License.
 *    You may obtain a copy of the License at
 *        http://www.apache.org/licenses/LICENSE-2.0
 *    Unless required by applicable law or agreed to in writing, software
 *    distributed under the License is distributed on an "AS IS" BASIS,
 *    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *    See the License for the specific language governing permissions and
 *    limitations under the License.
 */

package com.netflix.metacat.common.type;

import com.google.common.collect.ImmutableMap;

import java.util.Map;

/**
 * Created by amajumdar on 6/13/16.
 */
public class TypesRegistry {
    private static Map<Base, String> TypeToHiveType = ImmutableMap.<Base, String>builder()
            .put(Base.BOOLEAN, Base.BOOLEAN.getType())
            .put(Base.TINYINT, Base.TINYINT.getType())
            .put(Base.SMALLINT, Base.SMALLINT.getType())
            .put(Base.INT, Base.INT.getType())
            .put(Base.BIGINT, Base.BIGINT.getType())
            .put(Base.FLOAT, Base.FLOAT.getType())
            .put(Base.DOUBLE, Base.DOUBLE.getType())
            .put(Base.DECIMAL, Base.DECIMAL.getType())
            .put(Base.CHAR, Base.CHAR.getType())
            .put(Base.VARCHAR, Base.VARCHAR.getType())
            .put(Base.STRING, Base.STRING.getType())
            .put(Base.JSON, Base.STRING.getType())
            .put(Base.VARBINARY, "binary")
            .put(Base.DATE, Base.DATE.getType())
            .put(Base.TIMESTAMP, Base.TIMESTAMP.getType())
            .build();
    private static Map<String, Base> HiveTypeToType = ImmutableMap.<String, Base>builder()
            .put(Base.BOOLEAN.getType(), Base.BOOLEAN)
            .put(Base.TINYINT.getType(), Base.TINYINT)
            .put(Base.SMALLINT.getType(), Base.SMALLINT)
            .put(Base.INT.getType(), Base.INT)
            .put(Base.BIGINT.getType(), Base.BIGINT)
            .put(Base.FLOAT.getType(), Base.FLOAT)
            .put(Base.DOUBLE.getType(), Base.DOUBLE)
            .put(Base.DECIMAL.getType(), Base.DECIMAL)
            .put(Base.CHAR.getType(), Base.CHAR)
            .put(Base.VARCHAR.getType(), Base.VARCHAR)
            .put(Base.STRING.getType(), Base.STRING)
            .put("binary", Base.VARBINARY)
            .put(Base.DATE.getType(), Base.DATE)
            .put(Base.TIMESTAMP.getType(), Base.TIMESTAMP)
            .build();
    private static Map<Base, String> TypeToMySqlType = ImmutableMap.<Base, String>builder()
            .put(Base.BOOLEAN, Base.BOOLEAN.getType())
            .put(Base.TINYINT, Base.TINYINT.getType())
            .put(Base.SMALLINT, Base.SMALLINT.getType())
            .put(Base.INT, Base.INT.getType())
            .put(Base.BIGINT, Base.BIGINT.getType())
            .put(Base.FLOAT, Base.FLOAT.getType())
            .put(Base.DOUBLE, Base.DOUBLE.getType())
            .put(Base.DECIMAL, Base.DECIMAL.getType())
            .put(Base.CHAR, Base.CHAR.getType())
            .put(Base.VARCHAR, Base.VARCHAR.getType())
            .put(Base.STRING, "longtext")
            .put(Base.JSON, Base.JSON.getType())
            .put(Base.VARBINARY, Base.VARBINARY.getType())
            .put(Base.DATE, Base.DATE.getType())
            .put(Base.TIME, Base.TIME.getType())
            .put(Base.TIME_WITH_TIME_ZONE, Base.TIME.getType())
            .put(Base.TIMESTAMP, Base.TIMESTAMP.getType())
            .put(Base.TIMESTAMP_WITH_TIME_ZONE, Base.TIMESTAMP.getType())
            .build();
    private static Map<String, Base> MySqlTypeToType = ImmutableMap.<String, Base>builder()
            .put(Base.BOOLEAN.getType(), Base.BOOLEAN)
            .put("bool", Base.BOOLEAN)
            .put(Base.TINYINT.getType(), Base.TINYINT)
            .put(Base.SMALLINT.getType(), Base.SMALLINT)
            .put("mediumint", Base.INT)
            .put(Base.INT.getType(), Base.INT)
            .put(Base.BIGINT.getType(), Base.BIGINT)
            .put(Base.FLOAT.getType(), Base.FLOAT)
            .put("real", Base.FLOAT)
            .put(Base.DOUBLE.getType(), Base.DOUBLE)
            .put("double precision", Base.DOUBLE)
            .put(Base.DECIMAL.getType(), Base.DECIMAL)
            .put("numeric", Base.DECIMAL)
            .put(Base.CHAR.getType(), Base.CHAR)
            .put(Base.VARCHAR.getType(), Base.VARCHAR)
            .put("tinytext", Base.STRING)
            .put("smalltext", Base.STRING)
            .put("text", Base.STRING)
            .put("longtext", Base.STRING)
            .put(Base.JSON.getType(), Base.JSON)
            .put(Base.VARBINARY.getType(), Base.VARBINARY)
            .put(Base.DATE.getType(), Base.DATE)
            .put(Base.TIME.getType(), Base.TIME)
            .put(Base.TIMESTAMP.getType(), Base.TIMESTAMP)
            .build();
    private static Map<Base, String> TypeToPostgresType = ImmutableMap.<Base, String>builder()
            .put(Base.BOOLEAN, Base.BOOLEAN.getType())
            .put(Base.TINYINT, Base.SMALLINT.getType())
            .put(Base.SMALLINT, Base.SMALLINT.getType())
            .put(Base.INT, Base.INT.getType())
            .put(Base.BIGINT, Base.BIGINT.getType())
            .put(Base.FLOAT, "real")
            .put(Base.DOUBLE, "double precision")
            .put(Base.DECIMAL, Base.DECIMAL.getType())
            .put(Base.CHAR, Base.CHAR.getType())
            .put(Base.VARCHAR, Base.VARCHAR.getType())
            .put(Base.STRING, "text")
            .put(Base.JSON, Base.JSON.getType())
            .put(Base.VARBINARY, "bytea")
            .put(Base.DATE, Base.DATE.getType())
            .put(Base.TIME, Base.TIME.getType())
            .put(Base.TIME_WITH_TIME_ZONE, Base.TIME_WITH_TIME_ZONE.getType())
            .put(Base.TIMESTAMP, Base.TIMESTAMP.getType())
            .put(Base.TIMESTAMP_WITH_TIME_ZONE, Base.TIMESTAMP_WITH_TIME_ZONE.getType())
            .build();
    private static Map<String, Base> PostgresTypeToType = ImmutableMap.<String, Base>builder()
            .put(Base.BOOLEAN.getType(), Base.BOOLEAN)
            .put("bool", Base.BOOLEAN)
            .put(Base.TINYINT.getType(), Base.TINYINT)
            .put(Base.SMALLINT.getType(), Base.SMALLINT)
            .put(Base.INT.getType(), Base.INT)
            .put(Base.BIGINT.getType(), Base.BIGINT)
            .put(Base.FLOAT.getType(), Base.FLOAT)
            .put("real", Base.FLOAT)
            .put(Base.DOUBLE.getType(), Base.DOUBLE)
            .put("double precision", Base.DOUBLE)
            .put(Base.DECIMAL.getType(), Base.DECIMAL)
            .put("numeric", Base.DECIMAL)
            .put(Base.CHAR.getType(), Base.CHAR)
            .put(Base.VARCHAR.getType(), Base.VARCHAR)
            .put("tinytext", Base.STRING)
            .put("smalltext", Base.STRING)
            .put("text", Base.STRING)
            .put("longtext", Base.STRING)
            .put(Base.JSON.getType(), Base.JSON)
            .put(Base.VARBINARY.getType(), Base.VARBINARY)
            .put(Base.DATE.getType(), Base.DATE)
            .put(Base.TIME.getType(), Base.TIME)
            .put(Base.TIMESTAMP.getType(), Base.TIMESTAMP)
            .build();
    private static Map<Base, String> TypeToTeradataType = ImmutableMap.<Base, String>builder()
            .put(Base.BOOLEAN, "byteint")
            .put(Base.TINYINT, Base.SMALLINT.getType())
            .put(Base.SMALLINT, Base.SMALLINT.getType())
            .put(Base.INT, "integer")
            .put(Base.BIGINT, Base.BIGINT.getType())
            .put(Base.FLOAT, Base.FLOAT.getType())
            .put(Base.DOUBLE, Base.DOUBLE.getType())
            .put(Base.DECIMAL, Base.DECIMAL.getType())
            .put(Base.CHAR, Base.CHAR.getType())
            .put(Base.VARCHAR, Base.VARCHAR.getType())
            .put(Base.STRING, "clob")
            .put(Base.JSON, Base.JSON.getType())
            .put(Base.VARBINARY, "varbyte")
            .put(Base.DATE, Base.DATE.getType())
            .put(Base.TIME, Base.TIME.getType())
            .put(Base.TIME_WITH_TIME_ZONE, Base.TIME_WITH_TIME_ZONE.getType())
            .put(Base.TIMESTAMP, Base.TIMESTAMP.getType())
            .put(Base.TIMESTAMP_WITH_TIME_ZONE, Base.TIMESTAMP_WITH_TIME_ZONE.getType())
            .put(Base.INTERVAL_DAY_TO_SECOND, Base.INTERVAL_DAY_TO_SECOND.getType())
            .put(Base.INTERVAL_YEAR_TO_MONTH, Base.INTERVAL_YEAR_TO_MONTH.getType())
            .build();
    private static Map<String, Base> TeradataTypeToType = ImmutableMap.<String, Base>builder()
            .put("byteint", Base.BOOLEAN)
            .put(Base.SMALLINT.getType(), Base.SMALLINT)
            .put("integer", Base.INT)
            .put(Base.BIGINT.getType(), Base.BIGINT)
            .put(Base.FLOAT.getType(), Base.FLOAT)
            .put(Base.DOUBLE.getType(), Base.DOUBLE)
            .put("number", Base.DOUBLE)
            .put(Base.DECIMAL.getType(), Base.DECIMAL)
            .put(Base.CHAR.getType(), Base.CHAR)
            .put(Base.VARCHAR.getType(), Base.VARCHAR)
            .put("clob", Base.STRING)
            .put(Base.JSON.getType(), Base.JSON)
            .put("varbyte", Base.VARBINARY)
            .put(Base.DATE.getType(), Base.DATE)
            .put(Base.TIME.getType(), Base.TIME)
            .put(Base.TIME_WITH_TIME_ZONE.getType(), Base.TIME_WITH_TIME_ZONE)
            .put(Base.TIMESTAMP.getType(), Base.TIMESTAMP)
            .put(Base.TIMESTAMP_WITH_TIME_ZONE.getType(), Base.TIMESTAMP_WITH_TIME_ZONE)
            .put(Base.INTERVAL_DAY_TO_SECOND.getType(), Base.INTERVAL_DAY_TO_SECOND)
            .put(Base.INTERVAL_YEAR_TO_MONTH.getType(), Base.INTERVAL_YEAR_TO_MONTH)
            .build();
    private static Map<Base, String> TypeToPigType = ImmutableMap.<Base, String>builder()
            .put(Base.BOOLEAN, Base.BOOLEAN.getType())
            .put(Base.TINYINT, Base.INT.getType())
            .put(Base.SMALLINT, Base.INT.getType())
            .put(Base.INT, Base.INT.getType())
            .put(Base.BIGINT, "long")
            .put(Base.FLOAT, Base.FLOAT.getType())
            .put(Base.DOUBLE, Base.DOUBLE.getType())
            .put(Base.DECIMAL, Base.DOUBLE.getType())
            .put(Base.CHAR, "chararray")
            .put(Base.VARCHAR, "chararray")
            .put(Base.STRING, "chararray")
            .put(Base.JSON, "chararray")
            .put(Base.VARBINARY, "bytearray")
            .put(Base.DATE, "datetime")

            .put(Base.TIMESTAMP, "datetime")
            .put(Base.TIMESTAMP_WITH_TIME_ZONE, Base.TIMESTAMP_WITH_TIME_ZONE.getType())
            .put(Base.INTERVAL_DAY_TO_SECOND, Base.INTERVAL_DAY_TO_SECOND.getType())
            .put(Base.INTERVAL_YEAR_TO_MONTH, Base.INTERVAL_YEAR_TO_MONTH.getType())
            .build();
    private static Map<String, Base> PigTypeToType = ImmutableMap.<String, Base>builder()
            .put("byteint", Base.BOOLEAN)
            .put(Base.SMALLINT.getType(), Base.SMALLINT)
            .put("integer", Base.INT)
            .put(Base.BIGINT.getType(), Base.BIGINT)
            .put(Base.FLOAT.getType(), Base.FLOAT)
            .put(Base.DOUBLE.getType(), Base.DOUBLE)
            .put("number", Base.DOUBLE)
            .put(Base.DECIMAL.getType(), Base.DECIMAL)
            .put(Base.CHAR.getType(), Base.CHAR)
            .put(Base.VARCHAR.getType(), Base.VARCHAR)
            .put("clob", Base.STRING)
            .put(Base.JSON.getType(), Base.JSON)
            .put("varbyte", Base.VARBINARY)
            .put(Base.DATE.getType(), Base.DATE)
            .put(Base.TIME.getType(), Base.TIME)
            .put(Base.TIME_WITH_TIME_ZONE.getType(), Base.TIME_WITH_TIME_ZONE)
            .put(Base.TIMESTAMP.getType(), Base.TIMESTAMP)
            .put(Base.TIMESTAMP_WITH_TIME_ZONE.getType(), Base.TIMESTAMP_WITH_TIME_ZONE)
            .put(Base.INTERVAL_DAY_TO_SECOND.getType(), Base.INTERVAL_DAY_TO_SECOND)
            .put(Base.INTERVAL_YEAR_TO_MONTH.getType(), Base.INTERVAL_YEAR_TO_MONTH)
            .build();
}
